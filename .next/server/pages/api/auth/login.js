"use strict";(()=>{var e={};e.id=908,e.ids=[908],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},5329:(e,r,t)=>{t.r(r),t.d(r,{config:()=>f,default:()=>c,routeModule:()=>p});var n={};t.r(n),t.d(n,{default:()=>P});var i=t(1802),o=t(7153),a=t(6249);let u=require("@prisma/client"),s=require("bcrypt");var l=t.n(s);let d=new u.PrismaClient;async function P(e,r){if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});let{email:t,password:n}=e.body;if(!t||!n)return r.status(400).json({error:"Email and password required"});try{let e=await d.user.findUnique({where:{email:t}});if(!e||!await l().compare(n,e.password))return r.status(401).json({error:"Invalid credentials"});return r.status(200).json({message:"Login successful",user:e})}catch(e){return console.error("Login error:",e),r.status(500).json({error:"Internal server error"})}}let c=(0,a.l)(n,"default"),f=(0,a.l)(n,"config"),p=new i.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/auth/login",pathname:"/api/auth/login",bundlePath:"",filename:""},userland:n})},7153:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,r,t)=>{e.exports=t(145)}};var r=require("../../../webpack-api-runtime.js");r.C(e);var t=r(r.s=5329);module.exports=t})();